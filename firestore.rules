rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the document belongs to the current user
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User data structure
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Trades collection under each user
    match /users/{userId}/trades/{tradeId} {
      allow read, write: if isOwner(userId);
    }
    
    // Quick notes collection under each user
    match /users/{userId}/quickNotes/{noteId} {
      allow read, write: if isOwner(userId);
    }
    
    // Journal entries collection under each user
    match /users/{userId}/journalEntries/{entryId} {
      allow read, write: if isOwner(userId);
    }
    
    // Quests collection under each user
    match /users/{userId}/quests/{questId} {
      allow read, write: if isOwner(userId);
    }
    
    // Improvement tasks collection under each user
    match /users/{userId}/tasks/{taskId} {
      allow read, write: if isOwner(userId);
    }
    
    // Trading accounts collection under each user
    match /users/{userId}/tradingAccounts/{accountId} {
      allow read, write: if isOwner(userId);
    }
    
    // Tally rules collection under each user
    match /users/{userId}/tallyRules/{ruleId} {
      allow read, write: if isOwner(userId);
    }
    
    // Tally logs collection under each user
    match /users/{userId}/tallyLogs/{logId} {
      allow read, write: if isOwner(userId);
    }
    
    // Public share snapshots (explicitly sanitized content only)
    match /publicShares/{shareId} {
      // PUBLIC read for developer testing; tighten later with expiration if desired
      allow read: if true;
      // Only authenticated users can create/update/delete shares
      // Enforce isPublic on create to avoid accidental private exposure via this collection
      allow create: if isAuthenticated() && request.resource.data.isPublic == true;
      allow update, delete: if isAuthenticated();
    }
    
    // Public share images - separate collection for images to avoid 1MB limit
    match /publicShareImages/{imageId} {
      // PUBLIC read for public shares
      allow read: if true;
      // Only authenticated users can create/update/delete image collections
      allow create, update, delete: if isAuthenticated();
    }

    // Public share blocks - full HTML content per block
    match /publicShareBlocks/{blockId} {
      allow read: if true;
      allow create, update, delete: if isAuthenticated();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}